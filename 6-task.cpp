#include <iostream>
#include <vector>

int main() {
    int matrix[4][4];
    std::vector<int> vec(4);
    std::cout << "Matrix:" << std::endl;
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            std::cout << "Input number: ";
            std::cin >> matrix[i][j];
        }
    }
    std::cout << "Vector:" << std::endl;
    for (int i = 0; i < 4; i++) {
        std::cout << "Input number: ";
        std::cin >> vec[i];
    }
    std::vector<int> vecResult(4);
    std::cout << "Result vector is" << std::endl;
    for (int i = 0; i < 4; i++) {
        int temp = 0;
        for (int j = 0; j < 4; j++) {
            temp += matrix[i][j] * vec[j];
        }
        vecResult[i] = temp;
        std::cout << vecResult[i] << std::endl;
    }
} 
/*
Реализуйте частный случай умножения матрицы на матрицу, а именно
— умножение вектора на матрицу. Данная операция также весьма распространена
в компьютерной индустрии в целом и в компьютерное графике в частности, 
поэтому это будет хорошим упражнением.
Итак, у нас есть 4-х компонентный вектор V представленный с помощью массива, 
и матрица M размером 4х4, представленная в виде двумерного массива. Их произведением 
будет новый 4-х компонентный вектор R. Его компоненты будут суммой произведений компонент 
вектора V на строку матрицы M. Индекс столбца при этом равен индексу соответствующей компоненты 
вектора R, который мы и рассчитываем в текущий момент времени.
Все входные данные, матрица M и вектор V вносятся из пользовательского ввода.  Итоговый вектор 
R надо вывести в консоль (std::cout). Тип данных элементов - всегда float. Желательно реализовать 
этот алгоритм с помощью вложенного цикла на умножение колонки.
*/